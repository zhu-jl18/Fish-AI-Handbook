---
import type { SidebarSection } from '../scripts/sidebars'

const { section, items }: { section: string; items?: SidebarSection } =
  Astro.props
const currentPath = Astro.url.pathname

// 规范化路径：移除尾部斜杠（根路径除外）
const normalizePath = (path: string) => {
  if (!path || path === '/') return '/'
  return path.endsWith('/') ? path.slice(0, -1) : path
}

const normalizedCurrentPath = normalizePath(currentPath)

// 仅在路径完全相等时高亮（普通链接）
const isExactActive = (href?: string) => 
  !!href && normalizedCurrentPath === normalizePath(href)

// 对于包含子项的分组，允许前缀匹配
const isGroupActive = (href?: string) => {
  if (!href) return false
  const normalizedHref = normalizePath(href)
  return normalizedCurrentPath === normalizedHref || 
         normalizedCurrentPath.startsWith(normalizedHref + '/')
}
---

<div class="left-sidebar">
  <div class="sidebar-content">
    <nav class="section-nav">
      {
        items ? (
          items.map((entry) =>
            // @ts-ignore - runtime shape check
            entry.items ? (
              <div class="group">
                <a
                  href={entry.href ?? '#'}
                  class={isGroupActive(entry.href) ? 'active' : undefined}
                >
                  {entry.label}
                </a>
                <div class="submenu">
                  {entry.items?.map((link) => (
                    <a
                      href={link.href}
                      class={isExactActive(link.href) ? 'active' : undefined}
                    >
                      {link.label}
                    </a>
                  ))}
                </div>
              </div>
            ) : (
              // @ts-ignore - treat as link shape
              <a
                href={entry.href}
                class={isExactActive(entry.href) ? 'active' : undefined}
              >
                {entry.label}
              </a>
            ),
          )
        ) : (
          <slot />
        )
      }
    </nav>
  </div>
</div>

<style>
  .left-sidebar {
    position: fixed;
    left: 0;
    top: 60px;
    width: 250px;
    height: calc(100vh - 60px);
    background-color: #0a0a0a;
    border-right: 1px solid #333;
    overflow-y: auto;
    /* 统一侧边栏字号与行高，避免被页面内容影响 */
    font-size: 14px;
    line-height: 1.45;
  }

  .sidebar-content {
    padding: 1.25rem 0.75rem;
  }

  /* 移除顶部标题展示，避免视觉不协调 */
  .section-title { display: none; }

  .section-nav {
    display: flex;
    flex-direction: column;
    gap: 0.35rem; /* 统一顶层条目间距，更紧凑 */
  }

  .section-nav > * {
    flex-shrink: 0;
  }

  .section-nav a {
    color: #999;
    text-decoration: none;
    padding: 0.4rem 0.75rem;
    border-radius: 3px;
    transition: all 0.2s ease;
    /* 随容器字号等比缩放，保持层级统一 */
    font-size: 0.95em;
    display: block;
  }

  .section-nav a:hover,
  .section-nav a:focus,
  .section-nav a:active {
    color: var(--link-hover-color);
    background-color: transparent;
    outline: none;
    box-shadow: none;
  }

  .section-nav a.active {
    /* 仅改变文字为主题蓝色，不使用背景与左侧竖条 */
    color: var(--link-color);
    background-color: transparent;
    border-left: none;
  }

  /* 层级菜单样式 */
  /* 顶层分组不额外叠加间距，统一交给 .section-nav 的 gap 控制 */
  .group { margin: 0; }

  /* 注意：slot 注入的内容默认不受 scoped 样式影响。
   为了让传入内容中的 .submenu 生效，这里使用 :global 进行样式声明。 */
  :global(.submenu) {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: 0.2rem; /* 统一子项间距，略微收紧 */
    margin: 0.2rem 0 0; /* 与上方分组标题间距更紧凑 */
  }

  :global(.submenu) a {
    display: block;
    padding: 0.3rem 0.6rem 0.3rem 1.4rem;
    font-size: 0.9em;
    border-left: 2px solid transparent;
    color: #999;
    text-decoration: none;
    border-radius: 3px;
    transition: all 0.2s ease;
    margin: 0; /* 间距由父级 gap 控制，避免页面之间不一致 */
  }

  :global(.submenu) a:hover,
  :global(.submenu) a:focus,
  :global(.submenu) a:active {
    color: var(--link-hover-color);
    background-color: transparent;
    border-left-color: transparent;
    outline: none;
    box-shadow: none;
  }

  :global(.submenu) a.active {
    /* 子项选中同样仅变为主题蓝，不加背景与边框 */
    color: var(--link-color);
    border-left-color: transparent;
    background-color: transparent;
  }
</style>
