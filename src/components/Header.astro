---
import { siteConfig, navigationConfig } from '../config/index'

const { currentPage } = Astro.props
---

<header class="header">
  <nav class="nav">
    <div class="nav-container">
      <div class="nav-top">
        <a href="/" class="logo" aria-label="回到主页">
          <span class="logo-mark">
            {
              siteConfig.logoImage ? (
                <img src={siteConfig.logoImage} alt="Logo" class="logo-image" />
              ) : (
                siteConfig.logoMark
              )
            }
          </span>
          <span class="logo-copy">
            <span class="logo-name">{siteConfig.logoName}</span>
            <span class="logo-meta">{siteConfig.logoMeta}</span>
          </span>
        </a>
        <div class="nav-utilities">
          <a href="/search" class="search-button" aria-label="搜索文档">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="18"
              height="18"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
            >
              <circle cx="11" cy="11" r="8"></circle>
              <path d="m21 21-4.35-4.35"></path>
            </svg>
            <span class="search-label">{siteConfig.searchLabel}</span>
            <kbd class="search-shortcut">/</kbd>
          </a>
          <button type="button" class="icon-button" aria-label="通知">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="18"
              height="18"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
            >
              <path d="M18 8a6 6 0 0 0-12 0c0 7-3 9-3 9h18s-3-2-3-9"></path>
              <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
            </svg>
          </button>
          <button type="button" class="icon-button" aria-label="收件箱">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="18"
              height="18"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
            >
              <path d="M22 12h-6l-2 3h-4l-2-3H2"></path>
              <path
                d="M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"
              ></path>
            </svg>
          </button>
          <button
            type="button"
            class="icon-button"
            id="sitemap-button"
            aria-label="复制 Sitemap 链接"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="18"
              height="18"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
            >
              <rect x="3" y="3" width="7" height="7"></rect>
              <rect x="14" y="3" width="7" height="7"></rect>
              <rect x="14" y="14" width="7" height="7"></rect>
              <rect x="3" y="14" width="7" height="7"></rect>
            </svg>
          </button>
          <button type="button" class="avatar-button" aria-label="个人中心">
            {
              siteConfig.avatarImage ? (
                <img
                  src={siteConfig.avatarImage}
                  alt="Avatar"
                  class="avatar-image"
                />
              ) : (
                <span class="avatar-initial">{siteConfig.logoMark}</span>
              )
            }
          </button>
        </div>
      </div>
      <div class="nav-bottom">
        <div class="nav-links">
          {
            navigationConfig.items.map((item) => (
              <a
                href={item.href}
                class={currentPage === item.key ? 'active' : ''}
              >
                {item.label}
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </nav>
</header>

<!-- Toast 提示容器 -->
<div id="toast-container" class="toast-container"></div>

<style>
  .header {
    position: static;
    background: transparent;
    border-bottom: 1px solid var(--header-divider);
  }
  .nav {
    width: 100%;
  }
  .nav-container {
    max-width: var(--layout-max-width);
    margin: 0 auto;
    padding: 0.75rem calc(var(--layout-gap) + 1rem) 1rem;
    padding-left: calc(var(--layout-gap) + 0.35rem);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .nav-top {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .nav-utilities {
    margin-left: auto;
    display: flex;
    align-items: center;
    gap: 0.6rem;
  }
  .nav-bottom {
    display: flex;
    justify-content: flex-start;
  }
  .logo {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
    color: var(--header-text-strong);
  }
  .logo-mark {
    display: grid;
    place-items: center;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 1px solid var(--header-accent-border);
    background: var(--header-mark-bg);
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--header-accent);
    letter-spacing: 0.05em;
    flex-shrink: 0;
  }
  /* Logo 图片：移除圆形边框约束，保持原始形状 */
  .logo-mark:has(.logo-image) {
    border: none;
    background: transparent;
    border-radius: 0;
  }
  .logo-copy {
    display: flex;
    flex-direction: column;
    gap: 0.1rem;
    line-height: 1.1;
  }
  .logo-name {
    font-size: 0.95rem;
    font-weight: 600;
    letter-spacing: 0.02em;
  }
  .logo-meta {
    font-size: 0.75rem;
    color: var(--header-text-muted);
    letter-spacing: 0.08em;
    text-transform: uppercase;
  }
  .nav-links {
    display: flex;
    gap: 1.25rem;
    align-items: center;
    justify-content: flex-start;
  }
  .search-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.65rem;
    color: var(--header-text);
    background: var(--header-search-bg);
    border: 1px solid var(--header-accent-border);
    border-radius: 999px;
    text-decoration: none;
    padding: 0.35rem 0.85rem 0.35rem 0.75rem;
    transition:
      color var(--motion-duration-sm) var(--motion-ease-standard),
      border-color var(--motion-duration-sm) var(--motion-ease-standard),
      background-color var(--motion-duration-sm) var(--motion-ease-standard);
    font-size: 0.8rem;
  }
  .search-button:hover {
    color: var(--header-text-strong);
    border-color: var(--header-accent-border-strong);
    background: var(--header-search-bg-hover);
  }
  .icon-button,
  .avatar-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 1px solid var(--header-icon-border);
    background: var(--header-icon-bg);
    color: var(--header-text);
    padding: 0;
    cursor: pointer;
    transition:
      color var(--motion-duration-sm) var(--motion-ease-standard),
      border-color var(--motion-duration-sm) var(--motion-ease-standard),
      background-color var(--motion-duration-sm) var(--motion-ease-standard);
  }
  .icon-button:hover,
  .avatar-button:hover {
    color: var(--header-text-strong);
    border-color: var(--header-icon-border-hover);
    background: var(--header-icon-bg-hover);
  }
  .icon-button svg {
    width: 18px;
    height: 18px;
  }
  .avatar-button {
    font-size: 0.95rem;
    font-weight: 600;
  }
  .avatar-initial {
    letter-spacing: 0.04em;
  }
  .logo-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  .avatar-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
  }
  .search-label {
    display: none;
  }
  .search-shortcut {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.1rem 0.4rem;
    border-radius: 6px;
    border: 1px solid var(--header-shortcut-border);
    background: var(--header-shortcut-bg);
    color: var(--header-text-muted);
    font-family: var(--font-family-mono);
    font-size: 0.65rem;
    line-height: 1;
  }
  .nav-links a {
    color: var(--header-text);
    text-decoration: none;
    font-weight: 500;
    padding: 0.35rem 0.75rem;
    border-radius: 999px;
    border: 1px solid transparent;
    transition:
      color var(--motion-duration-sm) var(--motion-ease-standard),
      border-color var(--motion-duration-sm) var(--motion-ease-standard),
      background-color var(--motion-duration-sm) var(--motion-ease-standard);
    letter-spacing: 0.01em;
  }
  .nav-links a:hover {
    color: var(--header-accent);
    border-color: var(--header-accent-border);
    background: var(--header-pill-hover);
  }
  .nav-links a.active {
    color: var(--header-accent);
    border-color: var(--header-accent-border-strong);
    background: var(--header-pill-active);
  }
  @media (max-width: 1440px) {
    .nav-container {
      padding: 0.75rem calc(var(--layout-gap) * 0.85) 1rem;
      padding-left: calc(var(--layout-gap) * 0.6);
    }
  }
  @media (max-width: 1024px) {
    .nav-container {
      padding: 1rem 1.5rem;
      padding-left: 1.15rem;
      gap: 0.75rem;
    }
    .nav-top {
      flex-wrap: wrap;
      row-gap: 0.75rem;
    }
    .nav-utilities {
      width: 100%;
      justify-content: flex-end;
      gap: 0.5rem;
    }
    .nav-bottom {
      width: 100%;
    }
    .search-label {
      display: inline;
    }
  }
  @media (max-width: 768px) {
    .nav-container {
      padding: 0 1rem;
    }
    .logo-name {
      font-size: 0.9rem;
    }
    .logo-meta {
      font-size: 0.7rem;
    }
    .nav-links {
      gap: 0.75rem;
      flex-wrap: wrap;
    }
    .nav-links a {
      padding: 0.3rem 0.6rem;
      font-size: 0.85rem;
    }
    .nav-utilities {
      gap: 0.45rem;
    }
    .search-button {
      gap: 0.5rem;
      padding: 0.3rem 0.7rem;
    }
    .search-shortcut {
      display: none;
    }
  }

  /* Toast 提示样式 */
  .toast-container {
    position: fixed;
    top: 80px;
    right: 24px;
    z-index: 9999;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    pointer-events: none;
  }

  :global(.toast) {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    background: rgba(34, 197, 94, 0.16);
    border: 1px solid rgba(56, 255, 135, 0.3);
    border-radius: 8px;
    color: rgba(56, 255, 135, 0.95);
    font-size: 0.875rem;
    font-weight: 500;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    pointer-events: auto;
    animation: toast-slide-in var(--motion-duration-md)
      var(--motion-ease-standard);
    min-width: 280px;
    max-width: 400px;
  }

  :global(.toast.toast-hide) {
    animation: toast-slide-out var(--motion-duration-md)
      var(--motion-ease-standard) forwards;
  }

  :global(.toast-icon) {
    flex-shrink: 0;
    width: 18px;
    height: 18px;
  }

  @keyframes toast-slide-in {
    from {
      opacity: 0;
      transform: translateX(100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes toast-slide-out {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(100%);
    }
  }

  @media (max-width: 768px) {
    .toast-container {
      top: 70px;
      right: 16px;
      left: 16px;
    }

    :global(.toast) {
      min-width: auto;
      max-width: none;
    }
  }
</style>

<script>
  // Sitemap 复制功能
  const sitemapButton = document.getElementById('sitemap-button')
  const toastContainer = document.getElementById('toast-container')

  function showToast(message: string) {
    if (!toastContainer) return

    const toast = document.createElement('div')
    toast.className = 'toast'
    toast.innerHTML = `
      <svg class="toast-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="20 6 9 17 4 12"></polyline>
      </svg>
      <span>${message}</span>
    `

    toastContainer.appendChild(toast)

    // 2 秒后开始淡出动画
    setTimeout(() => {
      toast.classList.add('toast-hide')
      // 动画结束后移除元素
      setTimeout(() => {
        toast.remove()
      }, 200) // 与动画时长一致
    }, 2000)
  }

  async function copySitemapUrl() {
    const sitemapUrl = `${window.location.origin}/sitemap-index.xml`

    try {
      await navigator.clipboard.writeText(sitemapUrl)
      showToast('已复制 Sitemap 至剪贴板，可导入知识库')
    } catch (err) {
      console.error('复制失败:', err)
      showToast('复制失败，请重试')
    }
  }

  sitemapButton?.addEventListener('click', copySitemapUrl)

  // 搜索快捷键：按下 '/' 打开搜索页或聚焦搜索框
  function focusSearchInput() {
    const input = document.querySelector('#search input')
    if (input instanceof HTMLInputElement) {
      input.focus()
      input.select()
    }
  }

  window.addEventListener('keydown', (e) => {
    // 忽略组合键与已处理事件
    if (e.defaultPrevented || e.ctrlKey || e.metaKey || e.altKey) return

    // 仅当按下 '/' 且不在可编辑元素内时触发
    const key = e.key || ''
    if (key !== '/') return

    const target = e.target as Element | null
    const isEditable =
      !!target &&
      ((target as HTMLElement).isContentEditable ||
        ['INPUT', 'TEXTAREA', 'SELECT'].includes(target.tagName))

    if (isEditable) return

    // 阻止在页面上输入 '/'
    e.preventDefault()

    if (window.location.pathname.startsWith('/search')) {
      // 已在搜索页：直接聚焦
      focusSearchInput()
    } else {
      // 其他页面：跳转到搜索页
      window.location.href = '/search'
    }
  })
</script>
