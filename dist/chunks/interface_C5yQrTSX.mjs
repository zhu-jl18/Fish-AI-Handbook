const id = "01-fish-talks/glossary/interface.md";
						const collection = "docs";
						const slug = "01-fish-talks/glossary/interface";
						const body = "\r\n# 为什么要懂“接口”\r\n\r\n- 决定后续能否统一配置 Base URL/Key、无痛切换供应商。\r\n- 影响流式/工具调用/多模态等能力的使用方式。\r\n\r\n## OpenAI（Chat Completions / Responses）\r\n\r\n- Base URL：`https://api.openai.com/v1`\r\n- 常见路径：`/chat/completions`、（新）`/responses`\r\n- 流式：SSE（`stream: true`），事件逐片返回。\r\n- 工具调用：`tools`/`function_call`，生态丰富。\r\n\r\n```bash\r\n# cURL（Chat Completions）\r\ncurl https://api.openai.com/v1/chat/completions \\\r\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\r\n  -H \"Content-Type: application/json\" \\\r\n  -d '{\r\n    \"model\": \"gpt-4o-mini\",\r\n    \"messages\": [\r\n      {\"role\":\"user\",\"content\":\"给出三条写作建议\"}\r\n    ],\r\n    \"stream\": true\r\n  }'\r\n```\r\n\r\n## Anthropic（Claude）\r\n\r\n- Base URL：`https://api.anthropic.com/v1`\r\n- 路径：`/messages`\r\n- 流式：事件块推送（`anthropic-version` 头必填）。\r\n- 工具调用：`tools` + `tool_use`/`tool_result`，消息结构与 OpenAI 不同。\r\n\r\n```bash\r\ncurl https://api.anthropic.com/v1/messages \\\r\n  -H \"x-api-key: $ANTHROPIC_API_KEY\" \\\r\n  -H \"anthropic-version: 2023-06-01\" \\\r\n  -H \"content-type: application/json\" \\\r\n  -d '{\r\n    \"model\": \"claude-3-5-sonnet-20240620\",\r\n    \"messages\": [{\"role\":\"user\",\"content\":\"总结要点\"}],\r\n    \"stream\": true\r\n  }'\r\n```\r\n\r\n## Google Gemini\r\n\r\n- Base URL：`https://generativelanguage.googleapis.com/v1beta`\r\n- 路径：`/models/{model}:generateContent`（JSON）；流式为 `streamGenerateContent`。\r\n- 工具/函数：`toolConfig` 与 `functionDeclarations`/`functionCalls`。\r\n\r\n```bash\r\ncurl \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent?key=$GEMINI_API_KEY\" \\\r\n  -H \"Content-Type: application/json\" \\\r\n  -d '{\r\n    \"contents\": [{\"parts\":[{\"text\":\"解释 RAG 用在什么场景\"}]}]\r\n  }'\r\n```\r\n\r\n## 其他兼容接口（OpenAI-Compatible）\r\n\r\n- 常见 Base URL（仅示例，具体以官方为准）：\r\n  - Together：`https://api.together.xyz/v1`\r\n  - OpenRouter：`https://openrouter.ai/api/v1`\r\n  - Groq：`https://api.groq.com/openai/v1`\r\n  - DeepSeek：`https://api.deepseek.com/v1`\r\n  - Azure OpenAI：形如 `https://{resource}.openai.azure.com/openai/deployments/{deployment}`（路径与签名不同）\r\n- 价值：用一份 OpenAI 兼容客户端，在多家之间快速切换；记得核对模型名与工具调用是否完全兼容。\r\n\r\n## Base URL 与环境变量示例\r\n\r\n```ts\r\n// 统一读取配置并创建简单客户端\r\nconst baseUrl = process.env.MODEL_BASE_URL || \"https://api.openai.com/v1\";\r\nconst apiKey  = process.env.MODEL_API_KEY  || \"\";\r\n\r\nasync function ask(prompt: string) {\r\n  const res = await fetch(`${baseUrl}/chat/completions`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${apiKey}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      model: process.env.MODEL_NAME || \"gpt-4o-mini\",\r\n      messages: [{ role: \"user\", content: prompt }],\r\n      stream: false,\r\n    }),\r\n  });\r\n  return res.json();\r\n}\r\n```\r\n\r\n`.env.example` 建议：\r\n\r\n```bash\r\nMODEL_BASE_URL=https://api.openai.com/v1\r\nMODEL_API_KEY=sk-xxxxx\r\nMODEL_NAME=gpt-4o-mini\r\n```\r\n\r\n## 小结：如何选择/切换\r\n\r\n- 统一接口层：把 Base URL/Key/ModelName 都抽到配置。\r\n- 不同家的“流式/工具/多模态”细节不同，适配在接口层做一次即可。\r\n- 需要合规与稳定时，可选代理/网关统一出入口（见“其他常见术语 > 代理/反代”）。\r\n";
						const data = {title:"接口",description:"OpenAI / Gemini / Anthropic 与兼容接口的差异与 Base URL 配置"};
						const _internal = {
							type: 'content',
							filePath: "X:/Projcet/AI BOOK/src/content/docs/01-fish-talks/glossary/interface.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
